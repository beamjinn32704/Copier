
import java.io.File;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;



/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/

/**
 *
 * @author beamj
 */
public class MainFrame extends javax.swing.JFrame {
    
    public static int filesOnly = JFileChooser.FILES_ONLY;
    public static int dirsOnly = JFileChooser.DIRECTORIES_ONLY;
    public static int filesAndDirs = JFileChooser.FILES_AND_DIRECTORIES;
    
    private File toCopy;
    private File where;
    public JDialog dial;
    
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    public void setToCopy(File toCopy) {
        this.toCopy = toCopy;
        toCopyField.setText(toCopy.getName());
    }

    public void setWhere(File where) {
        this.where = where;
        copyToField.setText(where.getName());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        toCopyButton = new javax.swing.JButton();
        toCopyScroll = new javax.swing.JScrollPane();
        toCopyField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        copyToButton = new javax.swing.JButton();
        copyToScroll = new javax.swing.JScrollPane();
        copyToField = new javax.swing.JTextField();
        copyButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Copier");

        panel.setLayout(new java.awt.GridLayout(3, 0));

        jPanel1.setLayout(new java.awt.GridLayout(1, 2));

        toCopyButton.setText("To Copy");
        toCopyButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                toCopyButtonMouseClicked(evt);
            }
        });
        jPanel1.add(toCopyButton);

        toCopyField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        toCopyScroll.setViewportView(toCopyField);

        jPanel1.add(toCopyScroll);

        panel.add(jPanel1);

        jPanel2.setLayout(new java.awt.GridLayout(1, 2));

        copyToButton.setText("Where");
        copyToButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                copyToButtonMouseClicked(evt);
            }
        });
        jPanel2.add(copyToButton);

        copyToField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        copyToScroll.setViewportView(copyToField);

        jPanel2.add(copyToScroll);

        panel.add(jPanel2);

        copyButton.setText("Copy");
        copyButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                copyButtonMouseClicked(evt);
            }
        });
        panel.add(copyButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void toCopyButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toCopyButtonMouseClicked
        toCopy = getFile(filesAndDirs, "What to Copy", toCopy);
        if(toCopy != null){
            toCopyField.setText(toCopy.getName());
        }
    }//GEN-LAST:event_toCopyButtonMouseClicked

    private void copyToButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_copyToButtonMouseClicked
        where = getFile(dirsOnly, "Where", where);
        if(where != null){
            copyToField.setText(where.getName());
        }
    }//GEN-LAST:event_copyToButtonMouseClicked

    private void copyButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_copyButtonMouseClicked
        if(toCopy == null){
            showMessage("Choose What to Copy!", "Error!");
        }
        
        if(where == null){
            showMessage("Choose Where to Copy To!", "Error!");
        }
        CopyPanel pan = new CopyPanel(toCopy.getName(), where.getName());
        JOptionPane pane = new JOptionPane(pan, JOptionPane.PLAIN_MESSAGE);
        dial = pane.createDialog(this, "Copy");
        new Thread(new Runnable() {
            @Override
            public void run() {
                Copier.copy(toCopy, where, true, pan);
                Main.main.dial.dispose();
            }
        }).start();
        dial.setVisible(true);
    }//GEN-LAST:event_copyButtonMouseClicked
    
    private void showMessage(String mess, String title){
        JOptionPane.showMessageDialog(this, mess, title, JOptionPane.PLAIN_MESSAGE);
    }
    
    public static File getFile(int selectionMode, String title, File prevDir) {
        
        File file = null;
        JFileChooser chooser = new JFileChooser();
        if(prevDir != null){
            if(prevDir.isDirectory()){
                chooser.setCurrentDirectory(prevDir);
            } else {
                chooser.setCurrentDirectory(prevDir.getParentFile());
            }
        }
        chooser.setFileSelectionMode(selectionMode);
        chooser.setDialogTitle(title);
        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            file = chooser.getSelectedFile();
        }
        return file;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton copyButton;
    private javax.swing.JButton copyToButton;
    private javax.swing.JTextField copyToField;
    private javax.swing.JScrollPane copyToScroll;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel panel;
    private javax.swing.JButton toCopyButton;
    private javax.swing.JTextField toCopyField;
    private javax.swing.JScrollPane toCopyScroll;
    // End of variables declaration//GEN-END:variables
}
